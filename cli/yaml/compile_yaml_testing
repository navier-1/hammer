#!/bin/bash

# Compile the C code that parses the template YAML files; will print its findings to screen so you may
# verify that they match with what you expect.

# Writes the output .cmake files under a fixed path (may want to change this in the future).

# To release all allocated memory, define MEM_FREE;
# to optimize for speed, with no true risk for security, one can avoid defining MEM_FREE.
# The OS will recover the memory anyways once the program terminates.

gcc -std=c11 -o test_yaml_module \
    config.c transpile.c dependencies.c sources.c toolchain.c defines.c settings.c\
    -lcyaml -lyaml \
    -DTESTING_YAML \
    -fsanitize=address \
    -DMEM_FREE \
    #-static \

# If compilation fails, check if you have yaml and cyaml installed.

